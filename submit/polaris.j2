#!/bin/sh
{%- from "./utils.j2" import cliopts, export_env %}
#PBS -N {{ jobname or "MIST" }}
#PBS -l select={{ nodes or 1 }}:system=polaris
#PBS -l place=scatter
#PBS -l filesystems=eagle:home
#PBS -l walltime={{ walltime or "00:20:00" }}
#PBS -q {{ queue or "debug" }}
#PBS -A {{ account or "FoundEnergy" }}
set -x
cd ${PBS_O_WORKDIR}

# Internet access on nodes
export HTTPS_PROXY=http://proxy.alcf.anl.gov:3130
export HTTP_PROXY=http://proxy.alcf.anl.gov:3128
export http_proxy=http://proxy.alcf.anl.gov:3128
export https_proxy=http://proxy.alcf.anl.gov:3128
git config --global http.proxy http://proxy.alcf.anl.gov:3128
echo "Set HTTP_PROXY and to $HTTP_PROXY"

# Determine job size
NNODES=$(wc -l < "${PBS_NODEFILE}")
NGPU_PER_HOST=$(nvidia-smi -L | wc -l)
NGPUS="$((${NNODES}*${NGPU_PER_HOST}))"

# Lightning Env variables
export MASTER_ADDR=$(cat $PBS_NODEFILE | head -1 | awk '{print $4}')
export MASTER_PORT=2345
export WORLD_SIZE=$NGPUS

# Initialize environment
module purge
module use /soft/modulefiles/
module --ignore_cache load conda/2024-04-29 gcc-native/12.3
export CC=gcc-12
export CXX=g++-12
conda activate base
source ${PBS_O_WORKDIR}/activate

# Set env variables
{{- export_env( env ) }}

# Setup job-specific TMPDIR
echo "$(df -h /local/scratch)"
export TMPDIR=/local/scratch

{%- if deepspeed is defined %}
# Write out deepspeed config
cat > $TMPDIR/deepspeed.json<<EOF
{{ deepspeed | tojson(indent=4) }}
EOF
export PL_DEEPSPEED_CONFIG_PATH="$TMPDIR/deepspeed.json"
{%- endif %}

# Record configuration
echo "########################################"
export JOB_CONFIG="$TMPDIR/config_${JOBID}.json"
cat > $JOB_CONFIG<<EOF
{{ __config__ | tojson(indent=4) }}
EOF
cat $JOB_CONFIG
echo "########################################"

# For applications that internally handle binding MPI/OpenMP processes to GPUs
mpiexec \
    {{- cliopts( mpiexe ) | indent }} \
{%- if nsys is defined %}
nsys profile \
      {{- cliopts( nsys ) | indent }} \
{%- endif %}
    ${PBS_O_WORKDIR}/submit/set_node_rank \
    python3 train.py fit \
    {{- cliopts( train ) | indent }}
